# Name of your application
# Used to uniquely configure containers.
service: vote

# Name of the container image under which it will be pushed/pulled to/from registry
image: bcachet/votingapp/vote

# We are loading environment variables from .env file generated by Terraform
<% require "dotenv"; Dotenv.load("../.env") %>

# Define role to be 
primary_role: vote
servers:
  vote:
    hosts: <%= ENV.fetch('WEB_SERVERS').split(' ') %>
    env:
      clear:
        REDIS_URL: "redis://<%= ENV.fetch('DB_SERVER') %>:6379"
        BACKEND: db
    # Configure kamal-proxy to route traffic to our service/container
    proxy:
      ssl: false
      ## When no hosts are set, all requests are forwarded to container
      host: vote
      app_port: 5000
      healthcheck:
        interval: 1
        path: /healthz
        timeout: 5
    logging:
      driver: json-file
      options:
        max-size: 100m

# Configure builder setup.
builder:
  arch: amd64
  dockerfile: Dockerfile
  context: .

# Accessories are dependencies of our service
accessories:
  redis:
    service: redis
    image: valkey/valkey:8
    hosts: <%= [ ENV.fetch('DB_SERVER') ] %>
    port: 6379
    directories:
      - data:/data
    options:
      restart: always
    proxy: false

# SSH configuration comes from external file to be shared amongst deployment
<%= File.read('../kamal/ssh.yml') %>

# Registry configuration come from external file to be shared accross all deployments
<%
template = File.read('../kamal/registry.yml')
reg = ERB.new(template)
%>
<%= reg.result %>

hooks_path: ../kamal/hooks