# deployment files are ERB files
<% require "dotenv"; Dotenv.load(".env") %>

# Name of your application
# Used to uniquely configure containers.
service: vote

# Name of the container image under which it will be pushed/pulled to/from registry
image: bcachet/votingapp/vote

# Define role to be 
primary_role: web
servers:
  web:
    hosts: <%= ENV.fetch('WEB_SERVERS').split(' ') %>
    env:
      clear:
        REDIS_URL: "redis://<%= ENV.fetch('REDIS_SERVER') %>:6379"
        BACKEND: db
    # Configure kamal-proxy to route traffic to our service/container
    proxy: false
    logging:
      driver: json-file
      options:
        max-size: 100m

# Configure builder setup.
builder:
  arch: amd64
  dockerfile: ./vote/Dockerfile
  context: ./vote/

# Accessories are dependencies of our service
accessories:
  redis:
    service: redis
    image: valkey/valkey:8
    hosts: <%= [ ENV.fetch('REDIS_SERVER') ] %>
    port: 6379
    directories:
      - data:/data
    options:
      restart: always
    proxy: false

# SSH configuration comes from external file to be shared amongst deployment
<%
template = File.read('./config/ssh.yml')
ssh = ERB.new(template)
%>
<%= ssh.result %>

# Registry configuration come from external file to be shared accross all deployments
<%= File.read('./config/registry.yml') %>
