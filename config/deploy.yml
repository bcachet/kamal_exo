<% require "dotenv"; Dotenv.load(".env") %>

# Name of your application. Used to uniquely configure containers.
service: vote

# Name of the container image.
image: bcachet/votingapp/vote

allow_empty_roles: false
retain_containers: 2
primary_role: web
servers:
  web:
    hosts: <%= ENV.fetch('WEB_SERVERS').split(' ') %>
    env:
      clear:
        REDIS_URL: "redis://<%= ENV.fetch('REDIS_SERVER') %>:6379"
        BACKEND: db
    proxy:
      ssl: false
      ## When no hosts are set, all requests are forwarded to container
      # host: 
      ## Proxy connects to your container on port 80 by default.
      app_port: 5000
      healthcheck:
        interval: 1
        path: /healthz
        timeout: 5
    logging:
      driver: json-file
      options:
        max-size: 100m

# Configure builder setup.
builder:
  arch: amd64
  dockerfile: ./vote/Dockerfile
  context: ./vote

# Use accessory services (secrets come from .kamal/secrets).
#
accessories:
  redis:
    service: redis
    image: valkey/valkey:8
    hosts: <%= [ ENV.fetch('REDIS_SERVER') ] %>
    port: 6379
    directories:
      - data:/data
    options:
      restart: always
    proxy: false

<%
template = File.read('config/ssh.yml')
ssh = ERB.new(template)
%>

<%= ssh.result %>

<%= File.read("config/registry.yml") %>
